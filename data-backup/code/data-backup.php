<?php
require_once '../../base-path/config-path.php';
require_once BASE_PATH_1 . 'config_db/config.php';
require_once BASE_PATH_1 . 'session/session-manager.php';

// Start output buffering at the very beginning
ob_start();

SessionManager::checkSession();
$sessionVars = SessionManager::SessionVariables();

$mobile_no = $sessionVars['mobile_no'];
$user_id = $sessionVars['user_id'];
$role = $sessionVars['role'];
$user_login_id = $sessionVars['user_login_id'];
$user_name = $sessionVars['user_name'];
$user_email = $sessionVars['user_email'];
$permission_check = 0;

$d_name = "";
$data = "";
$selection = "";
$phase = "3PH";

if ($_SERVER["REQUEST_METHOD"] === "POST" && isset($_POST['D_ID']) && isset($_POST['PARAMETER'])) {
    $device_ids = filter_input(INPUT_POST, 'D_ID', FILTER_SANITIZE_STRING);
    $parameter = filter_input(INPUT_POST, 'PARAMETER', FILTER_SANITIZE_STRING);

    $device_ids = strtolower($device_ids);


    // Get device name if available (you can customize this query based on your database structure)
    $device_name = $device_ids; // Default to device ID if name not available
    // try {
    //     // Connect to the main database to get device name
    //     $main_conn = mysqli_connect(HOST, USERNAME, PASSWORD, "main_database"); // Replace with your main database name
    //     if ($main_conn) {
    //         $stmt = mysqli_prepare($main_conn, "SELECT device_name FROM devices WHERE device_id = ?");
    //         mysqli_stmt_bind_param($stmt, "s", $device_ids);
    //         mysqli_stmt_execute($stmt);
    //         mysqli_stmt_bind_result($stmt, $db_device_name);
    //         if (mysqli_stmt_fetch($stmt)) {
    //             $device_name = $db_device_name;
    //         }
    //         mysqli_stmt_close($stmt);
    //         mysqli_close($main_conn);
    //     }
    // } catch (Exception $e) {
    //     // Continue with device ID if there's an error getting the name
    // }

    // // Sanitize device name for use in filename (remove problematic characters)
    // $safe_device_name = preg_replace('/[^a-zA-Z0-9_-]/', '_', $device_name);

    // Database connection for backup
    $conn = mysqli_connect(HOST, USERNAME, PASSWORD, $device_ids);
    if (!$conn) {
        ob_end_clean(); // Clean any output
        echo json_encode(["status" => "error", "message" => "Connection failed: " . mysqli_connect_error()]);
        exit;
    }

    // Get all tables (excluding the ones in the $excludeTables array)
    $excludeTables = ["software_update"];
    $tables = [];
    $result = mysqli_query($conn, "SHOW TABLES");
    while ($row = mysqli_fetch_row($result)) {
        if (!in_array($row[0], $excludeTables)) {
            $tables[] = $row[0];
        }
    }

    // Create a temporary backup file
    $tempFile = tempnam(sys_get_temp_dir(), "sql_backup");
    $fileHandle = fopen($tempFile, "w");

    if (!$fileHandle) {
        ob_end_clean(); // Clean any output
        echo json_encode(["status" => "error", "message" => "Unable to create backup file."]);
        exit;
    }

    // Add header comment with metadata
    fwrite($fileHandle, "-- Database: {$device_ids}\n");
    fwrite($fileHandle, "-- Device: {$device_name}\n");
    fwrite($fileHandle, "-- Date: " . date("Y-m-d H:i:s") . "\n");
    fwrite($fileHandle, "-- Generated by: {$user_name}\n\n");

    // Write database structure and data
    foreach ($tables as $table) {
        // Get table structure
        $createTableResult = mysqli_query($conn, "SHOW CREATE TABLE `$table`");
        $createTableRow = mysqli_fetch_row($createTableResult);
        fwrite($fileHandle, "\n\n-- Table structure for table `$table`\n");
        fwrite($fileHandle, "DROP TABLE IF EXISTS `$table`;\n");
        fwrite($fileHandle, $createTableRow[1] . ";\n\n");

        // Get table data
        fwrite($fileHandle, "-- Data for table `$table`\n");
        $result = mysqli_query($conn, "SELECT * FROM `$table`");
        
        if ($result && mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                $values = array_map(function ($value) use ($conn) {
                    return $value === null ? "NULL" : "'" . mysqli_real_escape_string($conn, $value) . "'";
                }, array_values($row));

                fwrite($fileHandle, "INSERT INTO `$table` VALUES (" . implode(", ", $values) . ");\n");
            }
        }
    }

    // Close file and database connection
    fclose($fileHandle);
    mysqli_close($conn);

    // Set backup filename with device name/ID
    $backupFile = "backup_{$safe_device_name}_" . date("Y-m-d_H-i-s") . ".sql";

    // Clean any previous output
    ob_end_clean();
    
    // Set headers for file download
    header('Content-Description: File Transfer');
    header('Content-Type: application/octet-stream');
    header('Content-Disposition: attachment; filename="' . $backupFile . '"');
    header('Content-Length: ' . filesize($tempFile));
    header('Pragma: no-cache');
    header('Expires: 0');
    
    // Output the file content for download
    readfile($tempFile);
    
    // Delete temporary file after download
    unlink($tempFile);
    exit;
} else {
    ob_end_clean(); // Clean any output
    echo json_encode(["status" => "error", "message" => "Invalid request."]);
    exit;
}
?>